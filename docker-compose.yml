version: '2'
services:
  postgres:
    container_name: postgres
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
    - ./database/db_data:/var/lib/postgresql/data
    networks:
    - common-network

  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    networks:
    - common-network

  backend-1:
    container_name: backend-1
    build: ./backend
    command: npm run start
    networks:
    - common-network
  backend-2:
    container_name: backend-2
    build: ./backend
    command: npm run start
    networks:
    - common-network

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
    - "3000:3000"
    networks:
    - common-network

  nginx:
    container_name: nginx
    image: nginx:1.17.10
    ports:
    - "80:80"
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
    - common-network


networks:
  common-network:
